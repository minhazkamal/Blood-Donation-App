<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <link rel="shortcut icon" type="image/x-icon" href="/img/Logo-01.png">
    <title>Search Organizationg</title>
    <!-- ALL CSS RESET -->
    <link rel="stylesheet" type="text/css" href="/css/cssReset.css">
    <!-- BOOT STRAP v4.3.1 -->
    <link rel="stylesheet" type="text/css" href="/assets/css/bootstrap.min.css">
    <!-- font awosome v4 -->
    <link rel="stylesheet" type="text/css" href="/assets/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <!-- STYLE SHEET for this page -->
    <link rel="stylesheet" type="text/css" href="/css/searchOrg.css">
    <!--[if lt IE 9]>
		<script src="assets/js/html5shiv.min.js"></script>
		<script src="assets/js/respond.min.js"></script>
	<![endif]-->

    <!-- for mapbox -->
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v2.4.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v2.4.0/mapbox-gl.css' rel='stylesheet' />
    <!-- css -->
    <style>
        * {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        body {
            color: #404040;
            font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
            margin: 0;
            padding: 0;
            -webkit-font-smoothing: antialiased;

        }

        h1 {
            font-size: 22px;
            margin: 0;
            font-weight: 400;
            line-height: 20px;
            padding: 20px 2px;
        }

        a {
            color: #404040;
            text-decoration: none;
        }

        a:hover {
            color: #101010;
        }

        /* The page is split between map and sidebar - the sidebar gets 1/3, map
        gets 2/3 of the page. You can adjust this to your personal liking. */
        .sidebar {
            position: absolute;
            width: 33.3333%;
            height: 100%;
            top: 0;
            left: 0;
            overflow: hidden;
            border-right: 1px solid rgba(0, 0, 0, 0.25);
        }

        .map {
            position: absolute;
            left: 33.3333%;
            width: 66.6666%;
            top: 0;
            bottom: 0;
        }

        .heading {
            background: #fff;
            border-bottom: 1px solid #eee;
            height: 60px;
            line-height: 60px;
            padding: 0 10px;
        }

        .listings {
            height: 100%;
            overflow: auto;
            padding-bottom: 60px;
        }

        .listings .item {
            display: block;
            border-bottom: 1px solid #eee;
            padding: 10px;
            text-decoration: none;
        }

        .listings .item:last-child {
            border-bottom: none;
        }

        .listings .item .title {
            display: block;
            color: #b9375e;
            font-weight: 700;
        }

        .listings .item .title small {
            font-weight: 400;
        }

        .listings .item.active .title,
        .listings .item .title:hover {
            color: #2f6690;
        }

        .listings .item.active {
            background-color: #f8f8f8;
        }

        ::-webkit-scrollbar {
            width: 3px;
            height: 3px;
            border-left: 0;
            background: rgba(0, 0, 0, 0.1);
        }

        ::-webkit-scrollbar-track {
            background: none;
        }

        ::-webkit-scrollbar-thumb {
            background: #2f6690;
            border-radius: 0;
        }

        .clearfix {
            display: block;
        }

        .clearfix::after {
            content: '.';
            display: block;
            height: 0;
            clear: both;
            visibility: hidden;
        }

        /* css for interactivity of the map */
        /* Marker tweaks */
        .mapboxgl-popup-close-button {
            display: none;
        }

        .mapboxgl-popup-content {
            font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
            padding: 0;
            width: 180px;
        }

        .mapboxgl-popup-content-wrapper {
            padding: 1%;
        }

        .mapboxgl-popup-content h3 {
            background: #b9375e;
            color: #fff;
            margin: 0;
            display: block;
            padding: 10px;
            border-radius: 3px 3px 0 0;
            font-weight: 700;
            margin-top: -15px;
        }

        .mapboxgl-popup-content h4 {
            margin: 0;
            display: block;
            padding: 10px;
            font-weight: 400;
        }

        .mapboxgl-popup-content div {
            padding: 10px;
        }

        .mapboxgl-container .leaflet-marker-icon {
            cursor: pointer;
        }

        .mapboxgl-popup-anchor-top>.mapboxgl-popup-content {
            margin-top: 15px;
        }

        .mapboxgl-popup-anchor-top>.mapboxgl-popup-tip {
            border-bottom-color: #91c949;
        }

        .marker {
            background-image: url('/img/map-icon.png');
            background-size: cover;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
        }

        /* CSS for interactivity stops here */
    </style>
</head>

<body>
    <div class='sidebar'>
        <div class='heading'>
            <h1>Search Organizations</h1>
        </div>
        <div id='listings' class='listings'></div>
    </div>
    <div id="map" class="map">
        <!-- the map body -->
    </div>








    <!-- </script>
    <script src="assets/js/jquery-3.2.1.min.js"></script>
    <script src="assets/js/popper.min.js"></script>
    <script src="assets/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
        crossorigin="anonymous"></script> -->

    <script>
        /* This will let you use the .remove() function later on */
        if (!('remove' in Element.prototype)) {
            Element.prototype.remove = function () {
                if (this.parentNode) {
                    this.parentNode.removeChild(this);
                }
            };
        }

        var stores = {
            "type": "FeatureCollection",
            "features": [
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            90.396524,
                            23.725869
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 234-7336",
                        "phone": "2022347336",
                        "address": "Dhaka Medical College",
                        "city": "Dhaka",
                        "country": "Bangladesh",
                        "crossStreet": "at 15th St NW",
                        "postalCode": "1216",
                        "state": "D.C."
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.049766,
                            38.900772
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 507-8357",
                        "phone": "2025078357",
                        "address": "2221 I St NW",
                        "city": "Washington DC",
                        "country": "United States",
                        "crossStreet": "at 22nd St NW",
                        "postalCode": "20037",
                        "state": "D.C."
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.043929,
                            38.910525
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 387-9338",
                        "phone": "2023879338",
                        "address": "1512 Connecticut Ave NW",
                        "city": "Washington DC",
                        "country": "United States",
                        "crossStreet": "at Dupont Circle",
                        "postalCode": "20036",
                        "state": "D.C."
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.0672,
                            38.90516896
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 337-9338",
                        "phone": "2023379338",
                        "address": "3333 M St NW",
                        "city": "Washington DC",
                        "country": "United States",
                        "crossStreet": "at 34th St NW",
                        "postalCode": "20007",
                        "state": "D.C."
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.002583742142,
                            38.887041080933
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 547-9338",
                        "phone": "2025479338",
                        "address": "221 Pennsylvania Ave SE",
                        "city": "Washington DC",
                        "country": "United States",
                        "crossStreet": "btwn 2nd & 3rd Sts. SE",
                        "postalCode": "20003",
                        "state": "D.C."
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -76.933492720127,
                            38.99225245786
                        ]
                    },
                    "properties": {
                        "address": "8204 Baltimore Ave",
                        "city": "College Park",
                        "country": "United States",
                        "postalCode": "20740",
                        "state": "MD"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.097083330154,
                            38.980979
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(301) 654-7336",
                        "phone": "3016547336",
                        "address": "4831 Bethesda Ave",
                        "cc": "US",
                        "city": "Bethesda",
                        "country": "United States",
                        "postalCode": "20814",
                        "state": "MD"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.359425054188,
                            38.958058116661
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(571) 203-0082",
                        "phone": "5712030082",
                        "address": "11935 Democracy Dr",
                        "city": "Reston",
                        "country": "United States",
                        "crossStreet": "btw Explorer & Library",
                        "postalCode": "20190",
                        "state": "VA"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.10853099823,
                            38.880100922392
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(703) 522-2016",
                        "phone": "7035222016",
                        "address": "4075 Wilson Blvd",
                        "city": "Arlington",
                        "country": "United States",
                        "crossStreet": "at N Randolph St.",
                        "postalCode": "22203",
                        "state": "VA"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -75.28784,
                            40.008008
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(610) 642-9400",
                        "phone": "6106429400",
                        "address": "68 Coulter Ave",
                        "city": "Ardmore",
                        "country": "United States",
                        "postalCode": "19003",
                        "state": "PA"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -75.20121216774,
                            39.954030175164
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(215) 386-1365",
                        "phone": "2153861365",
                        "address": "3925 Walnut St",
                        "city": "Philadelphia",
                        "country": "United States",
                        "postalCode": "19104",
                        "state": "PA"
                    }
                },
                {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -77.043959498405,
                            38.903883387232
                        ]
                    },
                    "properties": {
                        "phoneFormatted": "(202) 331-3355",
                        "phone": "2023313355",
                        "address": "1901 L St. NW",
                        "city": "Washington DC",
                        "country": "United States",
                        "crossStreet": "at 19th St",
                        "postalCode": "20036",
                        "state": "D.C."
                    }
                }
            ]
        };

        mapboxgl.accessToken = 'pk.eyJ1IjoiaW50cmljYXRlLXBvdGF0byIsImEiOiJja3M0M2VzY3AyMmhmMnBvOTB4bnVuaHVtIn0.eqxegwotqUt-4XoroDJl2g';

        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v10',
            // latitude, longitude
            center: [90.3737413, 23.7911877],
            zoom: 13,
            scrollZoom: true
        });
        /* Assign a unique ID to each store */
        stores.features.forEach(function (store, i) {
            store.properties.id = i;
        });

        // this code to handle when a location circle on the map is clicked
        map.on('click', function (e) {
            /* Determine if a feature in the "locations" layer exists at that point. */
            var features = map.queryRenderedFeatures(e.point, {
                layers: ['locations']
            });

            /* If yes, then: */
            if (features.length) {
                var clickedPoint = features[0];

                /* Fly to the point */
                flyToStore(clickedPoint);

                /* Close all other popups and display popup for clicked store */
                createPopUp(clickedPoint);

                /* Highlight listing in sidebar (and remove highlight for all other listings) */
                var activeItem = document.getElementsByClassName('active');
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                var listing = document.getElementById('listing-' + clickedPoint.properties.id);
                listing.classList.add('active');
            }
        });

        /* Building The list of Locations */
        function buildLocationList(data) {
            data.features.forEach(function (store, i) {
                /**
                 * Create a shortcut for `store.properties`,
                 * which will be used several times below.
                **/
                var prop = store.properties;

                /* Add a new listing section to the sidebar. */
                var listings = document.getElementById('listings');
                var listing = listings.appendChild(document.createElement('div'));
                /* Assign a unique `id` to the listing. */
                listing.id = "listing-" + data.features[i].properties.id;
                /* Assign the `item` class to each listing for styling. */
                listing.className = 'item';

                /* Add the link to the individual listing created above. */
                var link = listing.appendChild(document.createElement('a'));
                link.href = '#';
                link.className = 'title';
                link.id = "link-" + prop.id;
                link.innerHTML = prop.address;

                /* Add details to the individual listing. */
                var details = listing.appendChild(document.createElement('div'));
                details.innerHTML = prop.city;
                if (prop.phone) {
                    details.innerHTML += ' · ' + prop.phoneFormatted;
                }
                if (prop.distance) {
                    var roundedDistance = Math.round(prop.distance * 100) / 100;
                    details.innerHTML +=
                        '<p><strong>' + roundedDistance + ' miles away</strong></p>';
                }

                // this code to handle when a user clicks a link in the sidebar:
                link.addEventListener('click', function (e) {
                    for (var i = 0; i < data.features.length; i++) {
                        if (this.id === "link-" + data.features[i].properties.id) {
                            var clickedListing = data.features[i];
                            flyToStore(clickedListing);
                            createPopUp(clickedListing);
                        }
                    }
                    var activeItem = document.getElementsByClassName('active');
                    if (activeItem[0]) {
                        activeItem[0].classList.remove('active');
                    }
                    this.parentNode.classList.add('active');
                });
            });
        }

        // Functions For Interactivity
        function flyToStore(currentFeature) {
            map.flyTo({
                center: currentFeature.geometry.coordinates,
                zoom: 15
            });
        }

        function createPopUp(currentFeature) {
            var popUps = document.getElementsByClassName('mapboxgl-popup');
            /** Check if there is already a popup on the map and if so, remove it */
            if (popUps[0]) popUps[0].remove();

            // create a HTML element for each feature
            var el = document.createElement('div');
            el.className = 'marker';

            new mapboxgl.Marker(el)
                .setLngLat(currentFeature.geometry.coordinates)
                .setPopup(new mapboxgl.Popup({ closeOnClick: false }) // add popups
                    .setHTML('<h3>' + currentFeature.properties.address + '</h3><h4>' + currentFeature.properties.city + '</h4>'))
                .addTo(map);

            // var popup = new mapboxgl.Popup({ closeOnClick: false })
            //     .setLngLat(currentFeature.geometry.coordinates)
            //     .setHTML('<h3>'+currentFeature.properties.address+'</h3>' +
            //         '<h4>' + currentFeature.properties.city + '</h4>')
            //     .addTo(map);
        }
        ///////////////////////////////////////

        map.on('load', () => {
            // Load an image from an external URL.
            map.loadImage(
                '/img/map-icon.png',
                (error, image) => {
                    if (error) throw error;

                    // Add the image to the map style.
                    map.addImage('map-icon', image);


                    // Add a layer to use the image to represent the data.
                    map.addLayer({
                        "id": "locations",
                        "type": "symbol",
                        /* Add a GeoJSON source containing place coordinates and information. */
                        "source": {
                            "type": "geojson",
                            "data": stores
                        },
                        "layout": {
                            "icon-image": 'map-icon',
                            "icon-size": 0.10,
                        }
                    });

                    buildLocationList(stores);
                }
            );
        });

        // map.on('load', function (e) {

        //     /* Add the data to your map as a layer */
        // map.addLayer({
        //     "id": "locations",
        //     "type": "symbol",
        //     /* Add a GeoJSON source containing place coordinates and information. */
        //     "source": {
        //         "type": "geojson",
        //         "data": stores
        //     },
        //     "layout": {
        //         "icon-image": '/img/map-icon.png',
        //         "icon-size": 0.25,
        //         "icon-allow-overlap": true,
        //         "text-allow-overlap": true
        //     }
        // });

        //     buildLocationList(stores);
        // });
    </script>



</body>

</html>